{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cart: []\n};\nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState: initialState,\n  reducers: {\n    addtocart: (state, action) => {\n      var myitem = state.cart.filter(key => key.id === action.payload.id);\n      if (myitem.length >= 1) {\n        toast.warn(\"This product is already in the cart\");\n      } else {\n        state.cart.push(action.payload);\n        toast.success(\"Successfully added to cart\");\n      }\n    },\n    qtyIncrease: (state, action) => {\n      for (var i = 0; i < state.cart.length; i++) {\n        if (state.cart[i].id === action.payload.id) {\n          state.cart[i].quantity++;\n        }\n      }\n    },\n    qtyDecrease: (state, action) => {\n      for (var i = 0; i < state.cart.length; i++) {\n        if (state.cart[i].id === action.payload.id) {\n          if (state.cart[i].quantity > 1) {\n            state.cart[i].quantity--;\n          } else {\n            toast.warn(\"Quantity must be greater than 1\");\n          }\n        }\n      }\n    },\n    removeCart: (state, action) => {\n      state.cart = state.cart.filter(item => item.id !== action.payload.id);\n      toast.success(\"Successfully removed from cart\");\n    },\n    clearCart: state => {\n      state.cart = [];\n      toast.success(\"Cart cleared successfully\");\n    }\n  }\n});\nexport const {\n  addtocart,\n  qtyIncrease,\n  qtyDecrease,\n  removeCart,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","cart","cartSlice","name","reducers","addtocart","state","action","myitem","filter","key","id","payload","length","warn","push","success","qtyIncrease","i","quantity","qtyDecrease","removeCart","item","clearCart","actions","reducer"],"sources":["C:/Users/Nandu's laptop/Downloads/stripe/stripe/New-project/client/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nconst initialState = {\r\n  cart: [],\r\n};\r\nconst cartSlice = createSlice({\r\n  name: \"cartSlice\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addtocart: (state, action) => {\r\n      var myitem = state.cart.filter((key) => key.id === action.payload.id);\r\n      if (myitem.length >= 1) {\r\n        toast.warn(\"This product is already in the cart\");\r\n      } else {\r\n        state.cart.push(action.payload);\r\n        toast.success(\"Successfully added to cart\");\r\n      }\r\n    },\r\n    qtyIncrease: (state, action) => {\r\n      for (var i = 0; i < state.cart.length; i++) {\r\n        if (state.cart[i].id === action.payload.id) {\r\n          state.cart[i].quantity++;\r\n        }\r\n      }\r\n    },\r\n    qtyDecrease: (state, action) => {\r\n      for (var i = 0; i < state.cart.length; i++) {\r\n        if (state.cart[i].id === action.payload.id) {\r\n          if (state.cart[i].quantity > 1) {\r\n            state.cart[i].quantity--;\r\n          } else {\r\n            toast.warn(\"Quantity must be greater than 1\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n    removeCart: (state, action) => {\r\n      state.cart = state.cart.filter((item) => item.id !== action.payload.id);\r\n      toast.success(\"Successfully removed from cart\");\r\n    },\r\n    clearCart: (state) => {\r\n      state.cart = [];\r\n      toast.success(\"Cart cleared successfully\");\r\n    },\r\n\r\n  },\r\n});\r\n\r\nexport const { addtocart, qtyIncrease, qtyDecrease, removeCart,clearCart } =\r\n  cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AACD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,WAAW;EACjBH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,IAAIC,MAAM,GAAGF,KAAK,CAACL,IAAI,CAACQ,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACrE,IAAIH,MAAM,CAACK,MAAM,IAAI,CAAC,EAAE;QACtBd,KAAK,CAACe,IAAI,CAAC,qCAAqC,CAAC;MACnD,CAAC,MAAM;QACLR,KAAK,CAACL,IAAI,CAACc,IAAI,CAACR,MAAM,CAACK,OAAO,CAAC;QAC/Bb,KAAK,CAACiB,OAAO,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC;IACDC,WAAW,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC9B,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACL,IAAI,CAACY,MAAM,EAAEK,CAAC,EAAE,EAAE;QAC1C,IAAIZ,KAAK,CAACL,IAAI,CAACiB,CAAC,CAAC,CAACP,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,EAAE;UAC1CL,KAAK,CAACL,IAAI,CAACiB,CAAC,CAAC,CAACC,QAAQ,EAAE;QAC1B;MACF;IACF,CAAC;IACDC,WAAW,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC9B,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACL,IAAI,CAACY,MAAM,EAAEK,CAAC,EAAE,EAAE;QAC1C,IAAIZ,KAAK,CAACL,IAAI,CAACiB,CAAC,CAAC,CAACP,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,EAAE;UAC1C,IAAIL,KAAK,CAACL,IAAI,CAACiB,CAAC,CAAC,CAACC,QAAQ,GAAG,CAAC,EAAE;YAC9Bb,KAAK,CAACL,IAAI,CAACiB,CAAC,CAAC,CAACC,QAAQ,EAAE;UAC1B,CAAC,MAAM;YACLpB,KAAK,CAACe,IAAI,CAAC,iCAAiC,CAAC;UAC/C;QACF;MACF;IACF,CAAC;IACDO,UAAU,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,IAAI,GAAGK,KAAK,CAACL,IAAI,CAACQ,MAAM,CAAEa,IAAI,IAAKA,IAAI,CAACX,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACvEZ,KAAK,CAACiB,OAAO,CAAC,gCAAgC,CAAC;IACjD,CAAC;IACDO,SAAS,EAAGjB,KAAK,IAAK;MACpBA,KAAK,CAACL,IAAI,GAAG,EAAE;MACfF,KAAK,CAACiB,OAAO,CAAC,2BAA2B,CAAC;IAC5C;EAEF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,SAAS;EAAEY,WAAW;EAAEG,WAAW;EAAEC,UAAU;EAACE;AAAU,CAAC,GACxErB,SAAS,CAACsB,OAAO;AACnB,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}